name: Execute Benchmarks

on:
  workflow_dispatch:

env:
  HOME: /home/runner/work/dynamic-load-balancer/dynamic-load-balancer

jobs:
  test1:
    name: Test 1 - Regular NGINX
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      
      - name: Status Check
        run: |
          pwd
          ls
          cat /proc/cpuinfo
          cat /proc/meminfo

      - name: Start up stack
        # run: docker-compose -f${{ env.HOME }}/docker-compose.yml -f${{ env.HOME }}/test/docker-compose-baseline.yml up -d
        uses: hoverkraft-tech/compose-action@v2.0.2
        with:
          compose-file: "./test/docker-compose-baseline.yml"
          compose-flags: "-p dynamic-load-balancer"
          up-flags: "--wait -d"

      - name: Deploy mountebank config
        run: |
          docker run --network host -v ${{env.HOME}}:/app --rm alpine/curl -vX POST http://localhost:2525/dynamic-load-balancer-mb-1/imposters -d @/app/test/imposters.json
          docker run --network host -v ${{env.HOME}}:/app --rm alpine/curl -vX POST http://localhost:2525/dynamic-load-balancer-mb-2/imposters -d @/app/test/imposters.json
          docker run --network host -v ${{env.HOME}}:/app --rm alpine/curl -vX POST http://localhost:2525/dynamic-load-balancer-mb-3/imposters -d @/app/test/imposters.json
      
      - name: Run K6 Benchmark for Test 1 @ 25 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 25 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 1 @ 50 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 50 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 1 @ 75 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 75 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 1 @ 100 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 100 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 1 @ 125 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 125 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 1 @ 150 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 150 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 1 @ 175 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 175 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 1 @ 200 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 200 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 1 @ 300 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 300 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 1 @ 400 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 400 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 1 @ 500 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 500 --duration 1m /script.js

      # - name: Print Telegraf metrics for Test 1
      #   run: |
      #     ls${{ env.HOME }}/output/*
      #     cat${{ env.HOME }}/output/metrics.out
      #     echo "" >${{ env.HOME }}/output/metrics.out

      - name: Stop Mountebank
        run: docker rm -f mb

  test2:
    name: Test 2 - Dynamic Load Balancer
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      
      - name: Status Check
        run: |
          pwd
          ls
          cat /proc/cpuinfo
          cat /proc/meminfo
          
      - name: Start up stack
        # run: docker-compose -f${{ env.HOME }}/docker-compose.yml up --build -d
        uses: hoverkraft-tech/compose-action@v2.0.2
        with:
          compose-file: "./docker-compose.yml"
          compose-flags: "-p dynamic-load-balancer"
          up-flags: "--wait --build -d"

      - name: Deploy mountebank config
        run: |
          docker run --network host -v ${{env.HOME}}:/app --rm alpine/curl -vX POST http://localhost:2525/!dynamic-load-balancer-mb-1/imposters -d @/app/test/imposters.json
          docker run --network host -v ${{env.HOME}}:/app --rm alpine/curl -vX POST http://localhost:2525/!dynamic-load-balancer-mb-2/imposters -d @/app/test/imposters.json
          docker run --network host -v ${{env.HOME}}:/app --rm alpine/curl -vX POST http://localhost:2525/!dynamic-load-balancer-mb-3/imposters -d @/app/test/imposters.json
      
      - name: Run K6 Benchmark for Test 2 @ 25 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 25 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 2 @ 50 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 50 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 2 @ 75 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 75 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 2 @ 100 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 100 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 2 @ 125 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 125 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 2 @ 150 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 150 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 2 @ 175 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 175 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 2 @ 200 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 200 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 2 @ 300 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 300 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 2 @ 400 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 400 --duration 1m /script.js

      - name: Run K6 Benchmark for Test 2 @ 500 vus
        uses: addnab/docker-run-action@v3
        with:
          image: grafana/k6
          options: --name k6 --rm -v${{ env.HOME }}/test/script.js:/script.js --network host
          run: k6 run --vus 500 --duration 1m /script.js

      - name: Print Telegraf metrics for Test 2
        run: |
          ls${{ env.HOME }}/output/*
          cat${{ env.HOME }}/output/metrics.out


      